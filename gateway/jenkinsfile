node() {

  stage('checkout') {
    checkout scm
  }

  stage('docker-login') {
    withCredentials( [usernamePassword(credentialsId: 'docker-hub',  usernameVariable: 'username', passwordVariable: 'password')]) {
      sh 'docker login -u $username -p $password '
    }
  
  }
  stage('docker-pull') {
    sh 'docker pull sijibomi242/eventer-gateway-dev:latest'
  }
  parallel(
            'Quality Tests': {
                sh "docker run --rm sijibomi242/eventer-gateway-dev npm run lint"
            },
            'Integration Tests': {
                sh "docker run --rm sijibomi242/eventer-gateway-dev npm run test:ci"
            }
            // 'Coverage Reports': {
            //     sh "docker run --rm -v $PWD/coverage:/app/coverage sijibomi242/eventer-gateway-dev npm run coverage-html"
            //     publishHTML (target: [
            //         allowMissing: false,
            //         alwaysLinkToLastBuild: false,
            //         keepAll: true,
            //         reportDir: "$PWD/coverage",
            //         reportFiles: "index.html",
            //         reportName: "Coverage Report"
            //     ])
            // }
        )
  stage('pre-pod image') {
    sh "docker build -t sijibomi242/eventer-gateway-pre-prod:latest -t sijibomi242/eventer-gateway-pre-prod:${env.BUILD_NUMBER} -f ./gateway/Dockerfile.prod . "
    sh 'docker push sijibomi242/eventer-gateway-pre-prod --all-tags'
  }

  stage ('git push pre-prod'){
     withCredentials( [usernamePassword(credentialsId: 'github',  usernameVariable: 'username', passwordVariable: 'password')]) {
        sh "echo ${env.JOB_NAME} ${env.BUILD_NUMBER} > builds.txt"
        sh 'git checkout --track origin/dev'
        sh 'git add -A'
        sh "git commit -m '${env.JOB_NAME} ${env.BUILD_NUMBER}'"
        sh "git remote set-url origin https://$username:$password@github.com/$username/eventer.git"
        sh "git push -u origin pre-prod"
    }   
  }
  
}