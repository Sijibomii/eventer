node() {

   try{

     stage('checkout') {
      checkout scm
      notifySlack('STARTED') 
      }

  stage('docker-login') {
    withCredentials( [usernamePassword(credentialsId: 'docker-hub',  usernameVariable: 'username', passwordVariable: 'password')]) {
      sh 'docker login -u $username -p $password '
    }
  
  }
  stage('docker-pull') {
    sh 'docker pull sijibomi242/eventer-gateway-dev:latest'
  }
  parallel(
            'Quality Tests': {
                sh "docker run --rm sijibomi242/eventer-gateway-dev npm run lint"
            },
            'Integration Tests': {
                sh "docker run --rm sijibomi242/eventer-gateway-dev npm run test:ci"
            }
            // 'Coverage Reports': {
            //     sh "docker run --rm -v $PWD/coverage:/app/coverage sijibomi242/eventer-gateway-dev npm run coverage-html"
            //     publishHTML (target: [
            //         allowMissing: false,
            //         alwaysLinkToLastBuild: false,
            //         keepAll: true,
            //         reportDir: "$PWD/coverage",
            //         reportFiles: "index.html",
            //         reportName: "Coverage Report"
            //     ])
            // }
        )
  stage('pre-pod image') {
    sh "docker build -t sijibomi242/eventer-gateway-pre-prod:latest -t sijibomi242/eventer-gateway-pre-prod:${env.BUILD_NUMBER} -f ./gateway/Dockerfile.prod . "
    sh 'docker push sijibomi242/eventer-gateway-pre-prod --all-tags'
  }

  stage ('git push pre-prod'){
     withCredentials( [usernamePassword(credentialsId: 'github',  usernameVariable: 'username', passwordVariable: 'password')]) {
        sh 'git checkout pre-prod'
        sh 'git pull origin dev'
        sh 'git pull'
        //sh 'git merge dev'
        sh 'git remote set-url origin https://$username:$password@github.com/$username/eventer.git'
        sh 'git push origin pre-prod'
        //notifySlack('FINISHED BUILD') 
    }   
  }

   }catch(e){
      currentBuild.result = 'FAILED' 
      throw e
    } finally {
       notifySlack(currentBuild.result) 
    }
  
}
